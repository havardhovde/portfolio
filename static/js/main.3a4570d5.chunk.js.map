{"version":3,"sources":["components/firebase.js","components/Project.js","components/Projects.js","components/Home.js","components/ProjectDetails.js","components/Contact.js","components/Header.js","components/Login.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Project","props","useState","activeProject","setActiveProject","className","onClick","data","title","defaultImage","src","alt","description","byline","to","id","signedIn","process","window","confirm","firestore","collection","doc","delete","then","console","log","catch","error","Projects","projects","setProjects","useEffect","orderBy","onSnapshot","snapshot","docs","add","timestamp","FieldValue","serverTimestamp","navigate","length","map","project","key","size","Home","projectRef","useRef","cursor","hideWhenDone","Delay","ms","ref","scrollTo","current","offsetTop","ProjectDetails","setProject","Prev","setPrev","Next","setNext","get","array","myPos","indexOf","parse","Contact","href","target","rel","Header","show","setShow","color","Login","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","currentUser","displayName","photoURL","signOut","Edit","status","setStatus","imageName","setImageName","updateValue","e","persist","type","existingProject","name","checked","value","onSubmit","preventDefault","update","message","onChange","placeholder","year","displayImage","hidden","accept","storageRef","storage","onUploadStart","onUploadError","onUploadSuccess","filename","child","getDownloadURL","url","onProgress","percentage","App","setSignedIn","onAuthStateChanged","user","basepath","path","default","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a4570d5.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBXciXUjE8bs8vP4Yy2wBuFJrIoC4h3EGM\",\r\n    authDomain: \"react-blog-firebase-be63e.firebaseapp.com\",\r\n    databaseURL: \"https://react-blog-firebase-be63e.firebaseio.com\",\r\n    projectId: \"react-blog-firebase-be63e\",\r\n    storageBucket: \"react-blog-firebase-be63e.appspot.com\",\r\n    messagingSenderId: \"354148184211\",\r\n    appId: \"1:354148184211:web:ee1b8c22aa10e007131d66\",\r\n    measurementId: \"G-YQ9K81Z47T\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import React, { useState } from 'react'\r\nimport \"./Project.css\"\r\nimport { MdDelete, MdEdit } from \"react-icons/md\";\r\nimport firebase from \"./firebase\"\r\nimport { Link } from \"@reach/router\"\r\n\r\nconst Project = (props) => {\r\n\r\n    const [activeProject, setActiveProject] = useState(false)\r\n\r\n    const deleteProject = () => {\r\n        if (window.confirm(\"Are you sure you want to delete this?\")) {\r\n            firebase.firestore().collection(\"projects\").doc(props.id).delete().then(console.log(\"Document was deleted\")).catch(error => console.log(error))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='projectContainer'>\r\n            <div onClick={ () => setActiveProject(!activeProject) } className={activeProject ? \"project active\" : \"project\"}>\r\n                <h2>{props.data.title}</h2>\r\n                {\r\n                    props.data.defaultImage &&\r\n                    <img src={props.data.defaultImage} alt=\"default\" />\r\n                }\r\n                {\r\n                    props.data.description &&\r\n                    <div className=\"byLine\">{props.data.byline}</div>\r\n                }\r\n                <Link className='readMoreLink' to={\"/projects/\" + props.id}>Read More</Link>\r\n                {\r\n                    props.signedIn &&\r\n                    <div className= \"admin-icons\">\r\n                        <Link to={process.env.PUBLIC_URL + '/edit/' + props.id}>\r\n                            <MdEdit className= \"editIcons\" />\r\n                        </Link>\r\n                        <MdDelete onClick={deleteProject} className= \"editIcons\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project","import React, {useState, useEffect } from 'react'\r\nimport firebase from \"./firebase\"\r\nimport Project from \"./Project\"\r\nimport \"./Projects.css\"\r\nimport { IoIosAddCircle } from \"react-icons/io\"\r\nimport { navigate } from \"@reach/router\"\r\nimport ClipLoader from \"react-spinners/ClipLoader\"\r\n\r\nconst Projects = (props) => {\r\n    const [projects, setProjects] = useState([])\r\n\r\n    const addProject = () => {\r\n        firebase.firestore().collection(\"projects\").add(\r\n            {\r\n                title: \"New project\",\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                description: \"Description\"\r\n            }\r\n        )\r\n            .then( doc => navigate(process.env.PUBLIC_URL + \"/edit/\" + doc.id))\r\n    }\r\n\r\n    useEffect( () => {\r\n        firebase\r\n        .firestore()\r\n        .collection(\"projects\")\r\n        .orderBy(\"year\", 'desc')\r\n        .onSnapshot(\r\n            snapshot => setProjects(snapshot.docs)\r\n        )\r\n    }, [])\r\n\r\n\r\n\r\n    return(\r\n        <main id='projectsContainer' className='projectPage'>\r\n            {\r\n                props.signedIn &&\r\n                <div className=\"add\">\r\n                    <IoIosAddCircle className=\"editIcons\" onClick={addProject} />\r\n                </div>\r\n            }\r\n\r\n            <h1 className='projectPageTitle'>projects</h1>\r\n\r\n            {\r\n                projects.length > 0\r\n                ?\r\n                <div className='projectsDisplay'>\r\n                    {\r\n                        projects.map(\r\n                            project => <Project key={project.id} id={project.id} data={project.data()} signedIn={props.signedIn}/>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            :   <div className=\"loader\">\r\n                    <ClipLoader size={50} />\r\n                </div>\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Projects","import React, { useRef } from 'react'\r\nimport './Home.css'\r\nimport Projects from './Projects'\r\nimport Typist from 'react-typist'\r\nimport { FiChevronDown } from \"react-icons/fi\"\r\n\r\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)\r\n\r\nconst Home = (props) => {\r\n\r\n    const projectRef = useRef(null)\r\n\r\n    return(\r\n        <main className='pageContainer'>\r\n            <div id='homePage' className='homePage'>\r\n                <h1 className='typistText'>\r\n                    <Typist cursor={{hideWhenDone: true}}>\r\n                        <span className='typedText'>Hello, I am <span className='typedText textFlair'>Håvard Hovde.</span></span>\r\n                        <Typist.Delay ms={500} />\r\n                        <br />\r\n                        <span className='typedText'>I like to write <span className='typedText textFlairMono'>code.</span></span>\r\n                        <Typist.Delay ms={500} />\r\n                        <br />\r\n                        <span className='typedText'>I am based in <span className='typedText textFlair'>Oslo, Norway.</span></span>\r\n                        <Typist.Delay ms={500} />\r\n                        <br />\r\n                        <span className='typedText'>Here is some of my <span className='typedText textFlair'>work.</span></span>\r\n                    </Typist>\r\n                </h1>\r\n            </div>\r\n\r\n            <FiChevronDown size={52} onClick={()=>scrollToRef(projectRef)} className='downArrow' />\r\n\r\n            <div ref={projectRef} id='projectsContainer' className='projectsContainer'>\r\n                <Projects id={props.id} signedIn={props.signedIn} />\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react'\r\nimport \"./ProjectDetails.css\"\r\nimport firebase from \"./firebase\"\r\nimport parse from 'html-react-parser';\r\nimport { Link } from \"@reach/router\"\r\n\r\nconst ProjectDetails = (props) => {\r\n    console.log(props.id)\r\n\r\n    const [project, setProject] = useState()\r\n    const [Prev, setPrev] = useState()\r\n    const [Next, setNext] = useState()\r\n\r\n    useEffect( () => {\r\n        firebase\r\n        .firestore()\r\n        .collection(\"projects\")\r\n        .doc(props.id)\r\n        .onSnapshot(\r\n            snapshot => setProject(snapshot.data())\r\n        )\r\n    }, [props.id])\r\n\r\n    useEffect ( () => {\r\n        firebase\r\n        .firestore()\r\n        .collection('projects')\r\n        .orderBy('title')\r\n        .get()\r\n        .then( projects  => {\r\n            const array = projects.docs.map( doc => doc.id)\r\n            const myPos = array.indexOf(props.id)\r\n            console.log(array.length)\r\n            setNext ( myPos + 1 === array.length ? array[0] : array[myPos + 1])\r\n            setPrev ( myPos === 0 ? array[array.length - 1] : array[myPos - 1])\r\n        }, [props.id])\r\n    })\r\n\r\n    return(\r\n        <main className=\"project-details\">\r\n            {\r\n                project ?\r\n            \r\n            <div>\r\n                <div className='pager'>\r\n                    <Link to={'/projects/' + Prev}>prev</Link>\r\n                    <Link to={'/projects/' + Next}>next</Link>\r\n                </div>\r\n                {\r\n                    project.defaultImage &&\r\n                    <img src={project.defaultImage} alt=\"default\" />\r\n                }\r\n                <h2>{project.title}</h2>\r\n                {\r\n                    project.description &&\r\n                    <div>{ parse(project.description) }</div>\r\n                }\r\n            </div>\r\n            : <h2>Fetching project, please wait</h2>\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ProjectDetails","import React from 'react'\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n    return(\r\n        <main className='contactPage'>\r\n            <h1>Contact</h1>\r\n            <p>haavardhovde@gmail.com</p>\r\n            <p>+47 40 46 59 30</p>\r\n            <p><a href='https://www.linkedin.com/in/h%C3%A5vard-langdal-hovde-bb4b6610a/' target='_blank' rel=\"noopener noreferrer\">LinkedIn</a></p>\r\n            <p><a href='https://github.com/havardhovde' target='_blank' rel=\"noopener noreferrer\">Github</a></p>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Contact","import React, { useState } from 'react'\r\n// import { Link } from \"@reach/router\"\r\nimport \"./Header.css\"\r\nimport { MdMenu } from \"react-icons/md\"\r\n\r\nconst Header = (props) => {\r\n\r\n    const [show, setShow] = useState(false)\r\n    // const [current, setCurrent] = useState(false)\r\n    \r\n    return(\r\n        <div className=\"header-container\">\r\n            <MdMenu className=\"burger\" color=\"white\" size=\"32\" onClick={ () => setShow(!show) } />\r\n            <header className={show ? \"visible\" : \"\"} onClick={ () => setShow(false)}>\r\n                <a href='/#homePage' className='headerButtons'>home</a>\r\n                {/* <Link className='headerButtons' to=\"/home\">home</Link> */}\r\n                <a href='./#projectsContainer'className='headerButtons'>projects</a>\r\n                {/* <Link className='headerButtons' to={process.env.PUBLIC_URL + \"/projects\"}>projects</Link> */}\r\n                <a href='./contact' className='headerButtons'>contact</a>\r\n                {/* <Link className='headerButtons' to={process.env.PUBLIC_URL + \"/contact\"}>contact</Link> */}\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport firebase from \"./firebase\"\r\nimport \"./Login.css\"\r\n\r\nconst Login = (props) => {\r\n    const loginWithGoogle = () => {\r\n        let provider = new firebase.auth.GoogleAuthProvider()\r\n        provider.addScope(\"profile\")\r\n        provider.addScope(\"email\")\r\n\r\n        firebase.auth()\r\n        .signInWithPopup(provider)\r\n            .catch( (error) => \r\n                console.log(error)\r\n            )\r\n    }\r\n\r\n    const logOut = () => {\r\n        firebase.auth().signOut()\r\n    }\r\n\r\n    return(\r\n     <main className=\"login\">\r\n         {\r\n            !props.signedIn &&\r\n\r\n            <button className='loginButton' onClick={loginWithGoogle}>Log in</button>\r\n         }\r\n         {\r\n            props.signedIn &&\r\n            <>\r\n                <h1>You are logged in</h1>\r\n                <p>Welcome {firebase.auth().currentUser.displayName}</p>\r\n                {\r\n                firebase.auth().currentUser.photoURL &&\r\n                    <img alt=\"profile img\" src={firebase.auth().currentUser.photoURL} />\r\n                }\r\n                <button onClick={logOut}>Log out</button>\r\n            </>\r\n\r\n         }\r\n     </main>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react'\r\nimport firebase from \"./firebase\"\r\nimport \"./Edit.css\"\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\n\r\nconst Edit = (props) => {\r\n\r\n    const [project, setProject] = useState({})\r\n    const [status, setStatus] = useState(\"\")\r\n    const [imageName, setImageName] = useState('defaultImage')\r\n\r\n    useEffect( () => {\r\n        firebase.firestore().collection(\"projects\").doc(props.id)\r\n        .onSnapshot( snapshot => \r\n            setProject(snapshot.data())    \r\n        )\r\n    }, [props.id] )\r\n\r\n    const saveProject = (e) => {\r\n        setStatus(\"Updating project, please hold\")\r\n        e.preventDefault()\r\n        firebase.firestore().collection(\"projects\").doc(props.id)\r\n            .update(project)\r\n            .then( () => setStatus(\"Project updated!\"))\r\n            .catch( error => {console.log(error.message)})\r\n    }\r\n\r\n    const updateValue = (e) => {\r\n        e.persist()\r\n\r\n        switch(e.target.type) {\r\n            case 'checkbox':{\r\n                setProject( existingProject => (\r\n                    {\r\n                        ...existingProject,\r\n                        [e.target.name]: e.target.checked\r\n                    })\r\n                )\r\n                break;\r\n            }\r\n            case 'text': {\r\n                setProject( existingProject => (\r\n                    {\r\n                        ...existingProject,\r\n                        [e.target.name]: e.target.value\r\n                    })\r\n                )\r\n                break;\r\n            }\r\n            default: {\r\n                setProject( existingProject => (\r\n                    {\r\n                        ...existingProject,\r\n                        [e.target.name]: e.target.value\r\n                    })\r\n                )\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const uploadStart = () => {\r\n        setStatus(\"uploading image, please hold\")\r\n    }\r\n\r\n    const uploadError = (error) => {\r\n        setStatus(error)\r\n    }\r\n\r\n    const handleProgress = (percentage) => {\r\n        console.log(percentage)\r\n    }\r\n\r\n    const uploadSuccess = (filename) => {\r\n        firebase\r\n        .storage()\r\n        .ref(\"images\")\r\n        .child(filename)\r\n        .getDownloadURL()\r\n        .then(\r\n            url => setProject( existingProject => ({\r\n                ...existingProject,\r\n                [imageName]: url\r\n            } ) )\r\n        )\r\n        setStatus(\"image uploaded\")\r\n    }\r\n\r\n    return(\r\n        <main className='editPage'>\r\n            <h1>Edit project {project.title}</h1>\r\n            <form onSubmit={saveProject}>\r\n                <input onChange={updateValue} name=\"title\" className='textInputSmall' value={project.title}/>\r\n                <input onChange={updateValue} name=\"year\" className='textInputSmall' placeholder=\"year\" value={project.year}/>\r\n                <input onChange={updateValue} name=\"byline\" className='textInputSmall' placeholder=\"Short description for the front page\" value={project.byline}/>\r\n\r\n                <div className='project-images'>\r\n                    {\r\n                        project.defaultImage &&\r\n                        <div>\r\n                            <h3>Default</h3>\r\n                            <img className=\"uploaderImage\" src= {project.defaultImage} alt=\"default\"></img>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        project.displayImage &&\r\n                        <div>\r\n                            <h3>Display</h3>\r\n                            <img className=\"uploaderImage\" src= {project.displayImage} alt=\"display\"></img>\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                <select name='imageName' onChange={e => setImageName(e.target.value)}>\r\n                    <option name='defaultImage' value='defaultImage'>Default image</option>\r\n                    <option name='displayImage' value='displayImage'>Display image</option>\r\n                </select>\r\n\r\n                <label>\r\n                    <div className=\"button\">Upload\r\n                        <FileUploader\r\n                            hidden \r\n                            accept=\"images/*\"\r\n                            storageRef={firebase.storage().ref('images')}\r\n                            onUploadStart={uploadStart}\r\n                            onUploadError={uploadError}\r\n                            onUploadSuccess={uploadSuccess}\r\n                            onProgress={handleProgress}\r\n                        />\r\n                    </div>\r\n                </label>\r\n                <textarea onChange={updateValue} name=\"description\" value={project.description}/>\r\n                <button className='saveButton' type=\"submit\">Save</button>\r\n            </form>\r\n            <p>{status}</p>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Edit","import React, { useState, useEffect } from 'react'\r\nimport { Router } from \"@reach/router\"\r\nimport \"./App.css\"\r\nimport firebase from \"./components/firebase\"\r\nimport Home from \"./components/Home\"\r\nimport Projects from \"./components/Projects\"\r\nimport ProjectDetails from \"./components/ProjectDetails\"\r\nimport Contact from \"./components/Contact\"\r\nimport Header from \"./components/Header\"\r\nimport Login from \"./components/Login\"\r\nimport Edit from \"./components/Edit\"\r\n\r\nconst App = () => {\r\n\r\n  const [signedIn, setSignedIn] = useState(false)\r\n\r\n  useEffect( () => {\r\n    firebase.auth().onAuthStateChanged(\r\n      user => {\r\n        if(user) {\r\n          setSignedIn(true)\r\n        } else {\r\n          setSignedIn(false)\r\n        }\r\n      }\r\n    )\r\n  })\r\n\r\n  return(\r\n      <div className=\"mainPage\">\r\n        <Header signedIn={signedIn} />\r\n        <Router basepath={process.env.PUBLIC_URL}>\r\n          <Home signedIn={signedIn} path=\"/home/:id\" />\r\n          <Home signedIn={signedIn} default path=\"\" />\r\n          <Projects signedIn={signedIn} path=\"/projects\" />\r\n          <ProjectDetails path=\"/projects/:id\" />\r\n          <Contact path=\"/contact\" />\r\n          <Login signedIn={signedIn} setSignedIn={setSignedIn} path=\"/login\" />\r\n          <Edit path=\"/edit/:id\" />\r\n        </Router>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}